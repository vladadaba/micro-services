version: "3.8"
services:
  web:
    build:
      context: ../services/WebAPI
      dockerfile: Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Docker
    ports:
      - "5001:80"
    depends_on:
      - db

  worker:
    build:
      context: ../services/WorkerService
      dockerfile: Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Docker
    ports:
      - "5002:80"
    depends_on:
      - kafka

  db:
    image: debezium/postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: jobs
    volumes:
      - ./data/db:/var/lib/postgresql/data

  zookeeper:
    image: debezium/zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888
    volumes:
      - ./data/zk/data:/zookeeper/data
      - ./data/zk/datalog:/zookeeper/txns
      - ./data/zk/conf:/zookeeper/conf

  kafka:
    image: debezium/kafka
    environment:
      ## the >- used below infers a value which is a string and properly 
      ## ignore the multiple lines resulting in one long string: 
      ## https://yaml.org/spec/1.2/spec.html
      KAFKA_ADVERTISED_LISTENERS: >- 
        LISTENER_DOCKER_INTERNAL://kafka:19092, 
        LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-kafka}:9092
      KAFKA_LISTENERS: >-
        LISTENER_DOCKER_INTERNAL://:19092,
        LISTENER_DOCKER_EXTERNAL://:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: >- 
        LISTENER_DOCKER_INTERNAL:PLAINTEXT,
        LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_LOGGERS: >- 
        kafka.controller=INFO,
        kafka.producer.async.DefaultEventHandler=INFO,
        state.change.logger=INFO
      CREATE_TOPICS: "jobs.public.outbox_items:1:1"
      ZOOKEEPER_CONNECT: "zookeeper:2181"
      BROKED_ID: 1
    ports:
      - 9092:9092
    volumes:
      - ./data/kafka:/kafka/data/1
    links:
      - zookeeper
    depends_on:
      - zookeeper

  connect:
    image: debezium/connect
    ports:
      - 8083:8083
    links:
      - kafka
      - db
    environment:
      BOOTSTRAP_SERVERS: "kafka:9092"
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: my_connect_configs
      OFFSET_STORAGE_TOPIC: my_connect_offsets
      STATUS_STORAGE_TOPIC: my_connect_statuses
